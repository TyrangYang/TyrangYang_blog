<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>TyrangYang_Blog</title>
        <link>https://tyrangyang.github.io/TyrangYang_blog/</link>
        <description>TyrangYang_Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 14 Dec 2020 15:52:02 -0800</lastBuildDate>
            <atom:link href="https://tyrangyang.github.io/TyrangYang_blog/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>HTML Effect with vanilla html js css</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/html-effect/</link>
    <pubDate>Mon, 14 Dec 2020 15:52:02 -0800</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/html-effect/</guid>
    <description><![CDATA[Modal box  Demo
 Cursor &amp; hover effect  Demo
 Pure Css hamburger button This is a hamburger button using pure css to style it.
 Demo
 Loading  Demo
 Sidebar  Demo
 Profile  Demo
 ]]></description>
</item><item>
    <title>Jest Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/jest-overview/</link>
    <pubDate>Mon, 14 Sep 2020 18:36:51 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/jest-overview/</guid>
    <description><![CDATA[Jest is a JavaScript Testing Framework
 Document: https://jestjs.io/docs/en/getting-started
How to use Jest function.js
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  const axios = require(&#39;axios&#39;); const functions = { add: (num1, num2) =&gt; num1 + num2, isNull: () =&gt; null, checkValue: (x) =&gt; x, createUser: () =&gt; { const user = { firstName: &#39;Brad&#39; }; user[&#39;lastName&#39;] = &#39;Traversy&#39;; return user; }, fetchUser: () =&gt; axios .]]></description>
</item><item>
    <title>Webpack Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/webpack-overview/</link>
    <pubDate>Wed, 09 Sep 2020 19:12:38 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/webpack-overview/</guid>
    <description><![CDATA[webpack is a static module bundler for modern JavaScript applications.
Document: https://webpack.js.org/concepts/
webpack core concept Entry An entry point indicates which module webpack should use to begin building out its internal dependency graph. webpack will figure out which other modules and libraries that entry point depends on (directly and indirectly).
Output The output property tells webpack where to emit the bundles it creates and how to name these files. It defaults to .]]></description>
</item><item>
    <title>Redux Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/redux-overview/</link>
    <pubDate>Mon, 07 Sep 2020 14:30:17 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/redux-overview/</guid>
    <description><![CDATA[Redux Document: English ‰∏≠Êñá
What is Redux  Redux is a predictable state container for JavaScript apps.
 Redux also created by Facebook and it is a improvement from Flux. Redux is state management for any view library (mostly react)
When use Redux Redux is design for complex UI, multiple view source or many interaction with server. If a simple UI, Redux is not necessary
Workflow   Redux Workflow   Example for Redux core In index.]]></description>
</item><item>
    <title>React Posts Archive</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/react-posts-archive/</link>
    <pubDate>Thu, 03 Sep 2020 12:25:26 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/react-posts-archive/</guid>
    <description><![CDATA[How to connect your React app to a backend on the same origin https://flaviocopes.com/how-to-serve-react-from-same-origin/
React Conditional Rendering Original source: https://www.robinwieruch.de/conditional-rendering-react
Why We Switched to React Hooks Original source: https://blog.bitsrc.io/why-we-switched-to-react-hooks-48798c42c7f
Why Can‚Äôt I Open My React App By Clicking Index.html? From My Own Post
Original source: https://medium.com/@louis.raymond/why-cant-i-open-my-react-app-by-clicking-index-html-d1778f6324cf
How To Use an IntersectionObserver in a React Hook Original source: https://medium.com/the-non-traditional-developer/how-to-use-an-intersectionobserver-in-a-react-hook-9fb061ac6cb5
React for Vue developers Original source: https://sebastiandedeyne.com/react-for-vue-developers/
How is getSnapshotBeforeUpdate implemented with Hooks?]]></description>
</item><item>
    <title>Prototype Inheritance in Javascript</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/prototype-inheritence-in-javascript/</link>
    <pubDate>Fri, 21 Aug 2020 16:37:45 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/prototype-inheritence-in-javascript/</guid>
    <description><![CDATA[Prototype   prototype   1 2  Foo.prototype.constructor === Foo; // true f1.__proto__ === Foo.prototype; // true   1  f1.constructor === Foo; // true   f1 don&rsquo;t have constructor, however depends on prototype chain engine will search f1.__proto__. This is line is equivalent to Foo.prototype.constructor === Foo
f1 instantiate a Foo:
 f1.__proto__link Foo.prototype f1 have a constructor which is Foo since Foo.prototype have a constructor  Object.]]></description>
</item><item>
    <title>Flex and Grid in CSS</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/flex-grid/</link>
    <pubDate>Tue, 18 Aug 2020 12:04:51 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/flex-grid/</guid>
    <description><![CDATA[Flex Cheat Sheet provide by CSS-tricks.com
A Flexbox code Example
display 1 2 3  .container { display: flex; }   flex-direction 1 2 3  .container { flex-direction: row | row-reverse | column | column-reverse; }     flex-direction   flex-warp 1 2 3  .container { flex-wrap: nowrap | wrap | wrap-reverse; }     flex-wrap   flex-flow This is a shorthand for the flex-direction and flex-wrap properties.]]></description>
</item><item>
    <title>Hugo Blog CheatSheet</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/hugo-blog-cheatsheet/</link>
    <pubDate>Mon, 17 Aug 2020 16:43:42 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/hugo-blog-cheatsheet/</guid>
    <description><![CDATA[Create new post hugo new posts/new.md
Add a picture   Basic markdown ![&lt;alt name](&lt; The route start from static folder&gt;)
  hugo build-in shortcut &ndash;&gt; figure   
  Add a reference link Documentation of ref and relref
1 2  \[Neat](\{\{&lt; ref &#34;blog/neat.md&#34; &gt;}}) \[Who](\{\{&lt; relref &#34;about.md#who&#34; &gt;}})   ]]></description>
</item><item>
    <title>Http Status Code Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/http-status-code/</link>
    <pubDate>Thu, 13 Aug 2020 14:11:38 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/http-status-code/</guid>
    <description><![CDATA[Reference: https://www.restapitutorial.com/httpstatuscodes.html
 ‚≠êÔ∏é -&gt; &ldquo;Top 10&rdquo; HTTP Status Code. More REST service-specific information is contained in the entry.
 1XX Information  100 continue &ndash; Client should continue 101 switching protocols 102 processing (webDAV)  2XX Success  ‚≠êÔ∏é200 OK &ndash; The request has succeeded.  General status code. Most common code used to indicate success.
  ‚≠êÔ∏é201 Created &ndash; A new resource has been created and should return a URI.]]></description>
</item><item>
    <title>Html5 Overview üèó</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/html5-overview/</link>
    <pubDate>Thu, 13 Aug 2020 14:02:26 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/html5-overview/</guid>
    <description><![CDATA[table 1 2 3 4 5 6 7 8 9 10  table ‚îú‚îÄ‚îÄ thead ‚îÇ ‚îî‚îÄ‚îÄ tr ‚îÇ ‚îî‚îÄ‚îÄ th ‚îú‚îÄ‚îÄ tbody ‚îÇ ‚îî‚îÄ‚îÄ tr ‚îÇ ‚îî‚îÄ‚îÄ td ‚îî‚îÄ‚îÄ tfoot ‚îî‚îÄ‚îÄ tr ‚îî‚îÄ‚îÄ td   Intersection Observer API 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  const option = { root: null, rootMargin: &#39;0px&#39;, threshold: 0.]]></description>
</item></channel>
</rss>
