<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Posts - Category - TyrangYang_Blog</title><link>https://tyrangyang.github.io/TyrangYang_blog/categories/posts/</link><description>Posts - Category - TyrangYang_Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 21 Aug 2020 16:37:45 -0700</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/categories/posts/" rel="self" type="application/rss+xml"/><item><title>Prototype Inheritance in Javascript</title><link>https://tyrangyang.github.io/TyrangYang_blog/prototype-inheritence-in-javascript/</link><pubDate>Fri, 21 Aug 2020 16:37:45 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/prototype-inheritence-in-javascript/</guid><description>Prototype prototype Foo.prototype.constructor === Foo; // true f1.__proto__ === Foo.prototype; // true f1.constructor === Foo; // true f1 don&amp;rsquo;t have constructor, however depends on prototype chain engine will search f1.__proto__. This is line is equivalent to Foo.prototype.constructor === Foo
f1 instantiate a Foo:
f1.__proto__link Foo.prototype f1 have a constructor which is Foo since Foo.prototype have a constructor Object.create() Syntax is Object.create(proto[, propertiesObject])
var newObj = Object.create(obj); newObj.__proto__ == obj; // true new When js running this line:</description></item><item><title>Flex and Grid in CSS</title><link>https://tyrangyang.github.io/TyrangYang_blog/flex-grid/</link><pubDate>Tue, 18 Aug 2020 12:04:51 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/flex-grid/</guid><description>Flex Cheat Sheet provide by CSS-tricks.com
A Flexbox code Example
display .container { display: flex; } flex-direction .container { flex-direction: row | row-reverse | column | column-reverse; } flex-direction flex-warp .container { flex-wrap: nowrap | wrap | wrap-reverse; } flex-wrap flex-flow This is a shorthand for the flex-direction and flex-wrap properties.
.container { flex-flow: column wrap; } order .item { order: 5; /* default is 0 */ } order flex-grow This defines the ability for a flex item to grow when there is extra space from container.</description></item><item><title>How to demonstrate your front end application on Github by gh-page</title><link>https://tyrangyang.github.io/TyrangYang_blog/gh-pages/</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/gh-pages/</guid><description><![CDATA[Github provide a tech called github pages that can hosted your project directly from repository. Basely push you project into gh-pages branch and the index.html will show on the page which is {&lt;github username&gt;.github.io}/{&lt;repository name&gt;}
gh-pages gh-pages provide by Tim Schaub is a npm package that can help you push something directly into gh-page branch
Read more detail in repository
command line usage This package also provide a command line tool:]]></description></item><item><title>How to check the Chinese ID is correct</title><link>https://tyrangyang.github.io/TyrangYang_blog/check-digit-id/</link><pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/check-digit-id/</guid><description><![CDATA[This check method will help you find out whether one digit is wrong or 2 adjacent digit are in reverse order.
Sample code checkChineseId = (id) =&gt; { const ID_LENGTH = 18; // check type if (typeof id !== &#39;string&#39;) { console.error(&#39;type error&#39;); return; } //check length if (id.length !== ID_LENGTH) { console.error(&#39;length error&#39;); return; } // check each digit for (let i = 0; i &lt; id.length - 1; i++) { const e = id[i]; if (e &lt; &#39;0&#39; || e &gt; &#39;9&#39;) { console.]]></description></item><item><title>Safari Shortcut</title><link>https://tyrangyang.github.io/TyrangYang_blog/safari-shotcut/</link><pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/safari-shotcut/</guid><description>Some keyboards shortcuts when using safari
Navigating Webpages Use arrow keys to go up and down.
Use Option+up/down or Shift+Space / Space to scroll quickly.
Use Command+up/down goto the top &amp;amp; button.
Open Pages in Tabs Use Command+T to open a new Tab.
Use Shift+Command+Left/right arrow or Control+Tab / Control+Shift+Tab to move from tab to tab.
Use Command+W to close current tab.
Use Command+Z to reopen a closed tab.
Use Command+Option+W to close all tabs expect current tab.</description></item><item><title>Callback, Promise and Async/await in js</title><link>https://tyrangyang.github.io/TyrangYang_blog/callback-promise-async/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/callback-promise-async/</guid><description>Js event loop | Call stack | task queue This website shows how js running with single thread to handle concurrency
Synchronous &amp;amp; asynchronous Function run synchronously means code is running as same as your writing.
But in real situation, some code may need time to running but you don&amp;rsquo;t want all code is block. Therefore, you may need some technique to let this part running asynchronously which means this part of code is block and the rest of code is not.</description></item><item><title>What is "this" in javascript</title><link>https://tyrangyang.github.io/TyrangYang_blog/what-is-this-in-js/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/what-is-this-in-js/</guid><description>Author: Dmitri Pavlutin
Reference: https://dmitripavlutin.com/gentle-explanation-of-this-in-javascript/
Concept Invocation of a function is executing the code that makes the body of a function, or simply calling the function. For example parseInt function invocation is parseInt('15'). Context of an invocation is the value of this within function body. For example the invocation of map.set('key', 'value') has the context map. Scope of a function is the set of variables, objects, functions accessible within a function body.</description></item><item><title>How to have a dynamic class name</title><link>https://tyrangyang.github.io/TyrangYang_blog/how-to-have-dynamic-classname/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/how-to-have-dynamic-classname/</guid><description><![CDATA[In same case, you may want to have a different style depend on your state or a variable. Now we can have two ways to achieve that.
classNames This is a javascript for conditionally joining classNames.
Here is: Github
Basically, you can combine any number of classNames.
const classNames = require(&#39;classNames&#39;); classNames(&#39;foo&#39;, { bar: true, duck: false }, &#39;baz&#39;, { quux: true }); // =&gt; &#39;foo bar baz quux&#39; ES6 template literals You can just use template literals.]]></description></item><item><title>A simple application apollo server and react</title><link>https://tyrangyang.github.io/TyrangYang_blog/spacex/</link><pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/spacex/</guid><description>graphql Design Graphql is base on what your want
github https://github.com/TyrangYang/SpaceX_graphql_react</description></item><item><title>VSCode shortCut</title><link>https://tyrangyang.github.io/TyrangYang_blog/vscode-shortcut/</link><pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/vscode-shortcut/</guid><description>Vscode page for shortcut
Short cut Source from Traversy Media
YouTube Channel
YouTube
Github</description></item></channel></rss>