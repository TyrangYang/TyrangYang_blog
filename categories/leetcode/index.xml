<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>LeetCode | Category | TyrangYang_Blog</title>
        <link>https://tyrangyang.github.io/TyrangYang_blog/categories/leetcode/</link>
        <description>LeetCode | Category | TyrangYang_Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 31 Jan 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/categories/leetcode/" rel="self" type="application/rss+xml" /><item>
                <title>Learn from leetCode</title>
                <link>https://tyrangyang.github.io/TyrangYang_blog/leetcode-idea/</link>
                <pubDate>Fri, 31 Jan 2020 00:00:00 &#43;0000</pubDate>
                <author>Haolin Yang</author>
                <guid>https://tyrangyang.github.io/TyrangYang_blog/leetcode-idea/</guid>
                <description>Some strategy learning from leetCode
C&#43;&#43; 2d array Better use a vector(don&amp;rsquo;t need to consider allocator)
1 2 3 4  int row = 10; int col = 10; int init = 1; vector&amp;lt;vector &amp;lt;int&amp;gt;&amp;gt; memos(row, vector&amp;lt;int&amp;gt;(col, init)) // init can ignore   1 2 3 4 5  int** a = new int*[rowCount]; for(int i = 0; i &amp;lt; rowCount; &#43;&#43;i) a[i] = new int[colCount]; delete ...   Traverse a tree The tree structure:</description>
            </item></channel>
</rss>
