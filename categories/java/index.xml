<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Java - Category - TyrangYang_Blog</title><link>https://tyrangyang.github.io/TyrangYang_blog/categories/java/</link><description>Java - Category - TyrangYang_Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 10 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/categories/java/" rel="self" type="application/rss+xml"/><item><title>Review java - Array</title><link>https://tyrangyang.github.io/TyrangYang_blog/java-review-array/</link><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-array/</guid><description><![CDATA[Declaring an array Both are allow
string argc[]; string[] argc; Int array int[] nums = new int[7]; nums[0] = 10; Rabbit[] racers = new Rabbit[10];//10 empty rabbit array; racers[0] = new Rabbit(&#34;B&#34;,&#34;F&#34;); arraycopy() System.arraycopy(nums, 0, nums, 0, nums.length); Array vs ArrayList An array needs to know its size at the time of creation, arrayList does not. To assign an object in array you must assign it to a specific index. Array use array syntax ([]).]]></description></item><item><title>Review java - javadoc</title><link>https://tyrangyang.github.io/TyrangYang_blog/java-review-javadoc/</link><pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-javadoc/</guid><description>JavaDocs JavaDocs is able to easily generate a code &amp;ldquo;maintenance manual&amp;rdquo;
A doc comment is made up of two parts &amp;ndash; a description and two or more tag.
/** * Here is description * * @tag Comment for tag */ Tags @author (classes and interfaces only, required) @version (classes and interfaces only, required) @param (methods and constructors only) @return (methods only) @exception @see @since @serial (or @serialField or @serialData) @deprecated JDK Docs External documentation can be created with javadoc</description></item><item><title>Review java - OO</title><link>https://tyrangyang.github.io/TyrangYang_blog/java-review-oo/</link><pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-oo/</guid><description>Class &amp;amp; Object A class only exists at compile time;
An object only exists at runtime.
Data Encapsulation Data Encapsulation/information hiding: where the internal state and operation are hidden from others.
The more information Class A knows about Class B, the greater the possibility that changing Class A will adversely affect Class B. In an ideal world, making internal changes to Class A should have no, or very little, effect on other classes.</description></item><item><title>Review java - Variable</title><link>https://tyrangyang.github.io/TyrangYang_blog/java-review-variable/</link><pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-variable/</guid><description>Basic types Every type have a default value:
Type Representation Initial value Storage Max. value byte singed integer 0 8 bits 127 short singed integer 0 16 bits 32767 int singed integer 0 32 bits 2147483647 long singed integer 0 64 bits over 10^18 float floating point 0.0 32 bits over 10^38 double floating point 0.0 64 bits over 10^308 boolean true or false false 1 bit char UNICODE (not ASCII) u0000 16 bits uFFFF Difference between i++ and ++i b = 1; a = b++; // a = 1; b = 2 b = 1; a = ++b; // a = 2; b = 2 int a = 1; int res = a++ + a; // res = 3 ; a = 2.</description></item></channel></rss>