<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Overview - Category - TyrangYang_Blog</title>
        <link>https://tyrangyang.github.io/TyrangYang_blog/categories/overview/</link>
        <description>Overview - Category - TyrangYang_Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 14 Sep 2020 18:36:51 -0700</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/categories/overview/" rel="self" type="application/rss+xml" /><item>
    <title>Jest Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/jest-overview/</link>
    <pubDate>Mon, 14 Sep 2020 18:36:51 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/jest-overview/</guid>
    <description><![CDATA[Jest is a JavaScript Testing Framework
 Document: https://jestjs.io/docs/en/getting-started
How to use Jest function.js
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  const axios = require(&#39;axios&#39;); const functions = { add: (num1, num2) =&gt; num1 + num2, isNull: () =&gt; null, checkValue: (x) =&gt; x, createUser: () =&gt; { const user = { firstName: &#39;Brad&#39; }; user[&#39;lastName&#39;] = &#39;Traversy&#39;; return user; }, fetchUser: () =&gt; axios .]]></description>
</item><item>
    <title>Webpack Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/webpack-overview/</link>
    <pubDate>Wed, 09 Sep 2020 19:12:38 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/webpack-overview/</guid>
    <description><![CDATA[webpack is a static module bundler for modern JavaScript applications.
Document: https://webpack.js.org/concepts/
webpack core concept Entry An entry point indicates which module webpack should use to begin building out its internal dependency graph. webpack will figure out which other modules and libraries that entry point depends on (directly and indirectly).
Output The output property tells webpack where to emit the bundles it creates and how to name these files. It defaults to .]]></description>
</item><item>
    <title>Redux Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/redux-overview/</link>
    <pubDate>Mon, 07 Sep 2020 14:30:17 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/redux-overview/</guid>
    <description><![CDATA[Redux Document: English ‰∏≠Êñá
What is Redux  Redux is a predictable state container for JavaScript apps.
 Redux also created by Facebook and it is a improvement from Flux. Redux is state management for any view library (mostly react)
When use Redux Redux is design for complex UI, multiple view source or many interaction with server. If a simple UI, Redux is not necessary
Workflow   Redux Workflow   Example for Redux core In index.]]></description>
</item><item>
    <title>Http Status Code Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/http-status-code/</link>
    <pubDate>Thu, 13 Aug 2020 14:11:38 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/http-status-code/</guid>
    <description><![CDATA[Reference: https://www.restapitutorial.com/httpstatuscodes.html
 ‚≠êÔ∏é -&gt; &ldquo;Top 10&rdquo; HTTP Status Code. More REST service-specific information is contained in the entry.
 1XX Information  100 continue &ndash; Client should continue 101 switching protocols 102 processing (webDAV)  2XX Success  ‚≠êÔ∏é200 OK &ndash; The request has succeeded.  General status code. Most common code used to indicate success.
  ‚≠êÔ∏é201 Created &ndash; A new resource has been created and should return a URI.]]></description>
</item><item>
    <title>Html5 Overview üèó</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/html5-overview/</link>
    <pubDate>Thu, 13 Aug 2020 14:02:26 -0700</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/html5-overview/</guid>
    <description><![CDATA[table 1 2 3 4 5 6 7 8 9 10  table ‚îú‚îÄ‚îÄ thead ‚îÇ ‚îî‚îÄ‚îÄ tr ‚îÇ ‚îî‚îÄ‚îÄ th ‚îú‚îÄ‚îÄ tbody ‚îÇ ‚îî‚îÄ‚îÄ tr ‚îÇ ‚îî‚îÄ‚îÄ td ‚îî‚îÄ‚îÄ tfoot ‚îî‚îÄ‚îÄ tr ‚îî‚îÄ‚îÄ td   Intersection Observer API 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  const option = { root: null, rootMargin: &#39;0px&#39;, threshold: 0.]]></description>
</item><item>
    <title>Go overview üèó</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/go/</link>
    <pubDate>Sun, 21 Jun 2020 00:25:10 -0400</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/go/</guid>
    <description><![CDATA[Download Go to this link
workspace Run go env in terminal. The variable GOPATH is the default workspace path. Project should under this folder.
In this workspace, file should structured as how you route your project:
1 2 3 4 5 6 7  . ‚îú‚îÄ‚îÄ bin ‚îú‚îÄ‚îÄ pkg ‚îî‚îÄ‚îÄ src ‚îî‚îÄ‚îÄ &lt;The home web page of version control&gt; ‚îî‚îÄ‚îÄ &lt;User name&gt; ‚îî‚îÄ‚îÄ &lt;Project name&gt;   Example:
1 2 3 4 5 6 7 8  .]]></description>
</item><item>
    <title>Vuex Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/vuex-overview/</link>
    <pubDate>Fri, 29 May 2020 16:54:43 -0400</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/vuex-overview/</guid>
    <description><![CDATA[Vuex Document: English ‰∏≠Êñá
Concept  State - App-level state/data Getters - Get pieces of state or computed values from state Actions - Called from components to commit mutation (async) Mutations - Mutate the state (sync) Modules - Each module can have its own state, getters, actions and mutations  Work flow   Vuex Workflow    Vuex work flow is similar with Redux =&gt; More Detail about Redux]]></description>
</item><item>
    <title>Vue Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/vue-overview/</link>
    <pubDate>Sun, 17 May 2020 16:51:23 -0400</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/vue-overview/</guid>
    <description><![CDATA[Vue Document: English ‰∏≠Êñá
life cycle Basic structure 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  &lt;template&gt; &lt;div&gt;&lt;/div&gt; &lt;/template&gt; &lt;script&gt; export default { name: &#39;&#39;, props: [...], data() { return {}; }, computed:{ ... } methods: { ... } }; &lt;/script&gt; &lt;style lang=&#34;css&#34;&gt;&lt;/style&gt;   Basic vue function v-bind 1 2 3 4 5 6 7  &lt;option v-for=&#34;(user, idx) in Users&#34; :key=&#34;idx&#34; :value=&#34;user.]]></description>
</item><item>
    <title>Python Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/python-overview/</link>
    <pubDate>Tue, 28 Apr 2020 16:43:12 -0400</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/python-overview/</guid>
    <description><![CDATA[This posts only use as a remainder
Variable Multiple assignment 1  x, y, name, is_cool = (1, 2.5, &#39;a name&#39;, True)   Casting 1 2 3 4  x = str(x) # x will be string y = int(y) # y will be an integer   String 1 2 3 4 5 6  name = &#39;Brad&#39; age = 37 print(&#39;name is&#39; + name + &#39; and age is &#39; + str(age)) print(&#39;name is {name} and age is {age}&#39;.]]></description>
</item><item>
    <title>chmod Overview</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/chmod/</link>
    <pubDate>Sat, 18 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/chmod/</guid>
    <description><![CDATA[chmod is linux command to control file permission
usage chmod [u|g|o|a][=|+|-] [r|w|x] 
u =&gt; user
g =&gt; group
o =&gt; other
a =&gt; all
r =&gt; read
w =&gt; write
x =&gt; execute
example chmod +wr test.txt give write and read permission for user
chmod -r test.txt remove read permission for user
chmod g=wrx test.txt give write, read and execute permission for group
use number specific the bits 011101110111 =&gt; -rwx-rwx-rwx]]></description>
</item></channel>
</rss>
