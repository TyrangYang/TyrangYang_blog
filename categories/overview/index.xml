<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Overview - Category - TyrangYang_Blog</title><link>https://tyrangyang.github.io/TyrangYang_blog/categories/overview/</link><description>Overview - Category - TyrangYang_Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 12 Mar 2023 14:48:36 -0700</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/categories/overview/" rel="self" type="application/rss+xml"/><item><title>ffmpeg</title><link>https://tyrangyang.github.io/TyrangYang_blog/ffmpeg/</link><pubDate>Sun, 12 Mar 2023 14:48:36 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/ffmpeg/</guid><description><![CDATA[Reference official https://ffmpeg.org
blog https://fireship.io/lessons/ffmpeg-useful-techniques/
node js https://www.npmjs.com/package/fluent-ffmpeg
example concatenate ffmpeg -f concat -i vids.txt -c copy out.mp4
vids.txt:
file &#39;name1.mov&#39; file &#39;name2.mov&#39; file &#39;name3.mov&#39; Type convention ffmpeg -i in.mp4 out.mov
ffmpeg -i in.mp4 out.gif
Scale It very common to reduce size of output file. Change scale usually the common and efficient way to do so.
ffmpeg -i in.mov -vf scale=960:-1 out.gif
Reference from ffmpeg wiki]]></description></item><item><title>Design Pattern</title><link>https://tyrangyang.github.io/TyrangYang_blog/design-pattern/</link><pubDate>Thu, 22 Jul 2021 16:35:53 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/design-pattern/</guid><description><![CDATA[Design pattern Factory pattern const createDataBaseClass = (dbName: DBOption) =&gt; { switch (dbName) { case &#39;InMemo&#39;: return InMemoryDataBase; case &#39;SQL&#39;: return SQL_DB; // ... // you can add anything else default: break; } }; Singleton pattern export const createDataBase = &lt;T extends BaseRecord&gt;() =&gt; { const db = new InMemoryDataBase&lt;T&gt;(); return db; }; const pokemonDB = createDataBase&lt;Pokemon&gt;(); pokemonDB.set({ id: &#39;Bulbasaur&#39;, attack: 59, defense: 10, }); console.log(pokemonDB.get(&#39;Bulbasaur&#39;)); // A CPP way to do const createDataBase2 = &lt;T extends BaseRecord&gt;() =&gt; { class InMemoryDataBase2 implements DataBase&lt;T&gt; { private db: Record&lt;string, T&gt; = {}; static instance: InMemoryDataBase2 = new InMemoryDataBase2(); private constructor() {} // private constructor is necessary public set(newValue: T): void { this.]]></description></item><item><title>Typescript overview</title><link>https://tyrangyang.github.io/TyrangYang_blog/typescript/</link><pubDate>Thu, 08 Apr 2021 23:37:35 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/typescript/</guid><description><![CDATA[type Union type &amp; Literal type const add = ( a: number | string, b: number | string, type?: &#39;number&#39; | &#39;string&#39; ): number | string =&gt; { if (type === &#39;string&#39;) { return a.toString() + b.toString(); } else return +a + +b; }; console.log(add(1, 2)); Array type Book = { id: string; name: string; }; let books: Book[] = []; unknown let test1: unknown; let test2: string; test1 = &#39;xyz&#39;; // ok // test2 = test1; // error function f1(a: any) { a.]]></description></item><item><title>React Logic Reuse Example</title><link>https://tyrangyang.github.io/TyrangYang_blog/react-logic-reuse/</link><pubDate>Fri, 12 Mar 2021 04:04:08 -0800</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/react-logic-reuse/</guid><description><![CDATA[React logic extraction Check this post
Example code This example demonstrate one single feature using four different feature to archive code split
Code running there: &ndash;&gt;Link&lt;&ndash;
import { useState, useEffect } from React; const Styles = { redBorder: { border: &#39;1px solid #f00&#39;, }, }; const MouseDisplay = ({ x, y }) =&gt; { return ( &lt;div&gt; Mouse at x: {x} ; y: {y} &lt;/div&gt; ); }; const MouseDisplay2 = ({ x, y }) =&gt; { return ( &lt;div style={{ color: &#39;teal&#39; }}&gt; Mouse at x: {x} ; y: {y} &lt;/div&gt; ); }; // Normal export const MouseInfoAndDisplay = () =&gt; { const [x, setX] = useState(0); const [y, setY] = useState(0); const handleMove = (e) =&gt; { setX(e.]]></description></item><item><title>Webpack Overview</title><link>https://tyrangyang.github.io/TyrangYang_blog/webpack-overview/</link><pubDate>Wed, 09 Dec 2020 19:12:38 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/webpack-overview/</guid><description>webpack is a static module bundler for modern JavaScript applications.
Document: https://webpack.js.org/concepts/
Installation npm i -D webpack webpack-cli webpack core concept Entry An entry point indicates which module webpack should use to begin building out its internal dependency graph. webpack will figure out which other modules and libraries that entry point depends on (directly and indirectly).
Output The output property tells webpack where to emit the bundles it creates and how to name these files.</description></item><item><title>Jest Overview</title><link>https://tyrangyang.github.io/TyrangYang_blog/jest-overview/</link><pubDate>Mon, 14 Sep 2020 18:36:51 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/jest-overview/</guid><description><![CDATA[Jest is a JavaScript Testing Framework
Document: https://jestjs.io/docs/en/getting-started
How to use Jest function.js
const axios = require(&#39;axios&#39;); const functions = { add: (num1, num2) =&gt; num1 + num2, isNull: () =&gt; null, checkValue: (x) =&gt; x, createUser: () =&gt; { const user = { firstName: &#39;Brad&#39; }; user[&#39;lastName&#39;] = &#39;Traversy&#39;; return user; }, fetchUser: () =&gt; axios .get(&#39;https://jsonplaceholder.typicode.com/users/1&#39;) .then((res) =&gt; res.data) .catch((err) =&gt; &#39;error&#39;), }; module.exports = functions; function.test.js]]></description></item><item><title>Redux Overview</title><link>https://tyrangyang.github.io/TyrangYang_blog/redux-overview/</link><pubDate>Mon, 07 Sep 2020 14:30:17 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/redux-overview/</guid><description>Redux Document: English ‰∏≠Êñá
What is Redux Redux is a predictable state container for JavaScript apps.
Redux also created by Facebook and it is a improvement from Flux. Redux is state management for any view library (mostly react)
When use Redux Redux is design for complex UI, multiple view source or many interaction with server. If a simple UI, Redux is not necessary
Workflow Redux Workflow Example for Redux core In index.</description></item><item><title>Http Status Code Overview</title><link>https://tyrangyang.github.io/TyrangYang_blog/http-status-code/</link><pubDate>Thu, 13 Aug 2020 14:11:38 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/http-status-code/</guid><description><![CDATA[Reference: https://www.restapitutorial.com/httpstatuscodes.html
‚≠êÔ∏é -&gt; &ldquo;Top 10&rdquo; HTTP Status Code. More REST service-specific information is contained in the entry.
1XX Information 100 continue &ndash; Client should continue 101 switching protocols 102 processing (webDAV) 2XX Success ‚≠êÔ∏é200 OK &ndash; The request has succeeded. General status code. Most common code used to indicate success.
‚≠êÔ∏é201 Created &ndash; A new resource has been created and should return a URI. Successful creation occurred (via either POST or PUT).]]></description></item><item><title>HTML5 Overview üèó</title><link>https://tyrangyang.github.io/TyrangYang_blog/html5-overview/</link><pubDate>Thu, 13 Aug 2020 14:02:26 -0700</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/html5-overview/</guid><description><![CDATA[table table ‚îú‚îÄ‚îÄ thead ‚îÇ ‚îî‚îÄ‚îÄ tr ‚îÇ ‚îî‚îÄ‚îÄ th ‚îú‚îÄ‚îÄ tbody ‚îÇ ‚îî‚îÄ‚îÄ tr ‚îÇ ‚îî‚îÄ‚îÄ td ‚îî‚îÄ‚îÄ tfoot ‚îî‚îÄ‚îÄ tr ‚îî‚îÄ‚îÄ td Intersection Observer API const option = { root: null, rootMargin: &#39;0px&#39;, threshold: 0.7, // or an array [0.1, 0.2, ...] }; const callback = (entries, observer) =&gt; { entries.forEach((entry) =&gt; { // Each entry describes an intersection change for one observed // target element: // entry.boundingClientRect // entry.]]></description></item><item><title>Go overview üèó</title><link>https://tyrangyang.github.io/TyrangYang_blog/go/</link><pubDate>Sun, 21 Jun 2020 00:25:10 -0400</pubDate><author>xxxx</author><guid>https://tyrangyang.github.io/TyrangYang_blog/go/</guid><description><![CDATA[Download Go to this link
workspace Run go env in terminal. The variable GOPATH is the default workspace path. Project should under this folder.
In this workspace, file should structured as how you route your project:
. ‚îú‚îÄ‚îÄ bin ‚îú‚îÄ‚îÄ pkg ‚îî‚îÄ‚îÄ src ‚îî‚îÄ‚îÄ &lt;The home web page of version control&gt; ‚îî‚îÄ‚îÄ &lt;User name&gt; ‚îî‚îÄ‚îÄ &lt;Project name&gt; Example:
. ‚îú‚îÄ‚îÄ bin ‚îú‚îÄ‚îÄ pkg ‚îî‚îÄ‚îÄ src ‚îî‚îÄ‚îÄ github.com ‚îî‚îÄ‚îÄ TyrangYang ‚îú‚îÄ‚îÄ project1 ‚îî‚îÄ‚îÄ project2 Main type string bool int int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uintptr byte = uint8 rune = int32 float32 float64 complex64 complex128 Print Import fmt is necessary]]></description></item></channel></rss>