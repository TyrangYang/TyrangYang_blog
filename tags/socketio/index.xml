<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>SocketIo - Tag - TyrangYang_Blog</title><link>https://tyrangyang.github.io/TyrangYang_blog/tags/socketio/</link><description>SocketIo - Tag - TyrangYang_Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 18 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/tags/socketio/" rel="self" type="application/rss+xml"/><item><title>SocketIo Overview</title><link>https://tyrangyang.github.io/TyrangYang_blog/socketio/</link><pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/socketio/</guid><description><![CDATA[socket.io enable realtime, bidirectional communication for Nodejs
Backend We use Express as backend framework.
const express = require(&#39;express&#39;); const path = require(&#39;path&#39;); const http = require(&#39;http&#39;); const socket_io = require(&#39;socket.io&#39;); const app = express(); const server = http.createServer(app); const io = socket_io(server); io.on(&#39;connection&#39;, (server_socket) =&gt; { // ... } Frontend bring client side socket.io in your html file &lt;script src=&#34;https://tyrangyang.github.io/TyrangYang_blog/socket.io/socket.io.js&#34;&gt;&lt;/script&gt; connect in your frontend script file const clientSocket = io(); Function Receive -&gt; on() socket.]]></description></item></channel></rss>