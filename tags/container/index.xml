<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Container - Tag - TyrangYang_Blog</title><link>https://tyrangyang.github.io/TyrangYang_blog/tags/container/</link><description>Container - Tag - TyrangYang_Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 31 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/tags/container/" rel="self" type="application/rss+xml"/><item><title>Container in c++</title><link>https://tyrangyang.github.io/TyrangYang_blog/containers/</link><pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/containers/</guid><description><![CDATA[<h2 id="classification">Classification</h2>
<ul>
<li>Sequence container
<ul>
<li>array (build in)</li>
<li><a href="#vector" rel="">vector</a></li>
<li><a href="#heap" rel="">heap</a></li>
<li><a href="#priorityqueue" rel="">priority queue</a></li>
<li><a href="#list" rel="">list</a></li>
<li>slist (not standard)</li>
<li><a href="#deque" rel="">deque</a></li>
<li><a href="#stack" rel="">stack</a> (adopter)</li>
<li><a href="#queue" rel="">queue</a> (adopter)</li>
</ul>
</li>
<li>Associative container
<ul>
<li><a href="#rb-tree" rel="">RB-tree</a> (not public)</li>
<li><a href="#set" rel="">set</a></li>
<li><a href="#map" rel="">map</a></li>
<li>multiset</li>
<li>multemap</li>
<li>hashtable (not standard)</li>
<li>hash_set (not standard)</li>
<li>hash_map (not standard)</li>
<li>hash_multimap (not standard)</li>
<li>hash_multiset (not standard)</li>
</ul>
</li>
</ul>
<p>Associative container have a key-value pair. It do not have back and front so they never have push_back, pop_back.</p>
<h2 id="vector">Vector</h2>
<p>This is similar with grow array. Vector use sequential space.</p>]]></description></item><item><title>Container comparison - c++ &amp; java</title><link>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-containor/</link><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-containor/</guid><description><![CDATA[<h2 id="container-comparison">Container comparison</h2>
<p>C++ version is c++11. Java version is java se8.</p>
<table>
  <thead>
      <tr>
          <th style="text-align: center">C++</th>
          <th style="text-align: center">JAVA</th>
          <th style="text-align: left">Description</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">array / [ ]</td>
          <td style="text-align: center">[ ]</td>
          <td style="text-align: left">固定大小的数组</td>
      </tr>
      <tr>
          <td style="text-align: center">vector</td>
          <td style="text-align: center">ArrayList</td>
          <td style="text-align: left">可变长度的数组</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">Vector</td>
          <td style="text-align: left">可变长度的数组，支持同步操作，效率比 ArrayList 略差</td>
      </tr>
      <tr>
          <td style="text-align: center">list</td>
          <td style="text-align: center">LinkedList</td>
          <td style="text-align: left">双链表，便于增删</td>
      </tr>
      <tr>
          <td style="text-align: center">forward_list</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">单链表，c++没有给他提供 size()的方法</td>
      </tr>
      <tr>
          <td style="text-align: center">deque</td>
          <td style="text-align: center">ArrayDeque</td>
          <td style="text-align: left">双向队列</td>
      </tr>
      <tr>
          <td style="text-align: center">stack</td>
          <td style="text-align: center">Stack</td>
          <td style="text-align: left">栈，先进后出</td>
      </tr>
      <tr>
          <td style="text-align: center">queue</td>
          <td style="text-align: center">Queue</td>
          <td style="text-align: left">队，先进先出</td>
      </tr>
      <tr>
          <td style="text-align: center">priority_queue</td>
          <td style="text-align: center">PriorityQueue</td>
          <td style="text-align: left">支持优先级的队列</td>
      </tr>
      <tr>
          <td style="text-align: center">set</td>
          <td style="text-align: center">TreeSet</td>
          <td style="text-align: left">集合，数据有序，红黑树</td>
      </tr>
      <tr>
          <td style="text-align: center">unordered_set</td>
          <td style="text-align: center">HashSet</td>
          <td style="text-align: left">集合，数据无序，hash</td>
      </tr>
      <tr>
          <td style="text-align: center">map</td>
          <td style="text-align: center">TreeMap</td>
          <td style="text-align: left">key-value 映射，key 有序，红黑树</td>
      </tr>
      <tr>
          <td style="text-align: center">unordered_map</td>
          <td style="text-align: center">HashMap</td>
          <td style="text-align: left">map, 无序，hash</td>
      </tr>
      <tr>
          <td style="text-align: center">multiset</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">集合，允许重复元素</td>
      </tr>
      <tr>
          <td style="text-align: center">multimap</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">map，允许重复的 key</td>
      </tr>
      <tr>
          <td style="text-align: center">unordered_multiset</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">无序允许重复元素集合</td>
      </tr>
      <tr>
          <td style="text-align: center">unordered_multimap</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">无序允许重复 key 的 map</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">LinkedHashSet</td>
          <td style="text-align: left">按照插入顺序，支持 hash 查找</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">LinkedHashMap</td>
          <td style="text-align: left">按照插入顺序，支持 hash 查找</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">HashTable</td>
          <td style="text-align: left">类似 HashMap，效率略低</td>
      </tr>
      <tr>
          <td style="text-align: center">bitset</td>
          <td style="text-align: center">BitSet</td>
          <td style="text-align: left">位操作</td>
      </tr>
  </tbody>
</table>
<h3 id="hashtable--hashmap">HashTable &amp; HashMap</h3>
<p>The HashMap class is roughly equivalent to Hashtable, except that it is asynchronized and permits nulls.</p>]]></description></item></channel></rss>