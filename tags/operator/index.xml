<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>operator | Tag | TyrangYang_Blog</title>
        <link>https://tyrangyang.github.io/TyrangYang_blog/tags/operator/</link>
        <description>operator | Tag | TyrangYang_Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 13 Aug 2019 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/tags/operator/" rel="self" type="application/rss+xml" /><item>
                <title>Operator overwrite in c&#43;&#43;</title>
                <link>https://tyrangyang.github.io/TyrangYang_blog/operator-overwrite/</link>
                <pubDate>Tue, 13 Aug 2019 00:00:00 &#43;0000</pubDate>
                <author>Haolin Yang</author>
                <guid>https://tyrangyang.github.io/TyrangYang_blog/operator-overwrite/</guid>
                <description>Example increment and decrement operator
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  #include &amp;lt;iostream&amp;gt;using namespace std; class INT { private: int m_i; public: INT(int i):m_i(i){}; friend bool operator==(INT&amp;amp; test1, INT&amp;amp; test2){ return test1.</description>
            </item></channel>
</rss>
