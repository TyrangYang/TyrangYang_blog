<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Java - Tag - TyrangYang_Blog</title><link>https://tyrangyang.github.io/TyrangYang_blog/tags/java/</link><description>Java - Tag - TyrangYang_Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 17 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/tags/java/" rel="self" type="application/rss+xml"/><item><title>RB tree</title><link>https://tyrangyang.github.io/TyrangYang_blog/rb-tree/</link><pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/rb-tree/</guid><description><![CDATA[<h2 id="2-3-tree--2-4-tree">2-3 tree &amp; 2-4 tree</h2>
<p>2-node: 1 key and 2 children
3-node: 2 keys and 3 children
4-node: 3 keys and 4 children</p>
<p>A (2,4) tree (also called 2-4 tree or 2-3-4 tree) is a multi-way search with the following properties:</p>
<ul>
<li>Node-Size Property: every internal node has at most four children</li>
<li>Depth Property: all the external nodes have the same depth</li>
</ul>
<h3 id="insertion">insertion</h3>
<p></p>]]></description></item><item><title>Common method comparison - c++ &amp; java</title><link>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-common-method/</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-common-method/</guid><description><![CDATA[<h2 id="sort">Sort</h2>
<h3 id="c">C++</h3>
<p>For c++, here is <a href="http://www.cplusplus.com/reference/algorithm/sort/?kw=sort" target="_blank" rel="noopener noreffer ">official document</a></p>
<h4 id="sort-1">sort()</h4>
<p>This method sorts elements in the range [first, last).</p>
<p>Result is in ascending order by deflaut.</p>
<p>Introsort.</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-cpp">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="c1">// sort algorithm example
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">     </span><span class="c1">// std::cout
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">    </span><span class="c1">// std::sort
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">       </span><span class="c1">// std::vector
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kt">bool</span> <span class="nf">myfunction</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="kt">int</span> <span class="n">j</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">j</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">myints</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">32</span><span class="p">,</span><span class="mi">71</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">45</span><span class="p">,</span><span class="mi">26</span><span class="p">,</span><span class="mi">80</span><span class="p">,</span><span class="mi">53</span><span class="p">,</span><span class="mi">33</span><span class="p">};</span>
</span></span><span class="line"><span class="cl">  <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">myvector</span> <span class="p">(</span><span class="n">myints</span><span class="p">,</span> <span class="n">myints</span><span class="o">+</span><span class="mi">8</span><span class="p">);</span> <span class="c1">// 32 71 12 45 26 80 53 33
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">  <span class="c1">// using default comparison (operator &lt;):
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">std</span><span class="o">::</span><span class="n">sort</span> <span class="p">(</span><span class="n">myvector</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">myvector</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="mi">4</span><span class="p">);</span> <span class="c1">//(12 32 45 71)26 80 53 33
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">  <span class="c1">// using function as comp
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">std</span><span class="o">::</span><span class="n">sort</span> <span class="p">(</span><span class="n">myvector</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">myvector</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">myfunction</span><span class="p">);</span> <span class="c1">//80 71 53 45 33 32 26 12
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">  <span class="c1">// print out content:
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;myvector contains:&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span> <span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;::</span><span class="n">iterator</span> <span class="n">it</span><span class="o">=</span><span class="n">myvector</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span> <span class="n">it</span><span class="o">!=</span><span class="n">myvector</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">it</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39; &#39;</span> <span class="o">&lt;&lt;</span> <span class="o">*</span><span class="n">it</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<p>On average, linearithmic in the distance between first and last: Performs approximately N*log<sub>2</sub>N</p>]]></description></item><item><title>Container comparison - c++ &amp; java</title><link>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-containor/</link><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-containor/</guid><description><![CDATA[<h2 id="container-comparison">Container comparison</h2>
<p>C++ version is c++11. Java version is java se8.</p>
<table>
  <thead>
      <tr>
          <th style="text-align: center">C++</th>
          <th style="text-align: center">JAVA</th>
          <th style="text-align: left">Description</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">array / [ ]</td>
          <td style="text-align: center">[ ]</td>
          <td style="text-align: left">固定大小的数组</td>
      </tr>
      <tr>
          <td style="text-align: center">vector</td>
          <td style="text-align: center">ArrayList</td>
          <td style="text-align: left">可变长度的数组</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">Vector</td>
          <td style="text-align: left">可变长度的数组，支持同步操作，效率比 ArrayList 略差</td>
      </tr>
      <tr>
          <td style="text-align: center">list</td>
          <td style="text-align: center">LinkedList</td>
          <td style="text-align: left">双链表，便于增删</td>
      </tr>
      <tr>
          <td style="text-align: center">forward_list</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">单链表，c++没有给他提供 size()的方法</td>
      </tr>
      <tr>
          <td style="text-align: center">deque</td>
          <td style="text-align: center">ArrayDeque</td>
          <td style="text-align: left">双向队列</td>
      </tr>
      <tr>
          <td style="text-align: center">stack</td>
          <td style="text-align: center">Stack</td>
          <td style="text-align: left">栈，先进后出</td>
      </tr>
      <tr>
          <td style="text-align: center">queue</td>
          <td style="text-align: center">Queue</td>
          <td style="text-align: left">队，先进先出</td>
      </tr>
      <tr>
          <td style="text-align: center">priority_queue</td>
          <td style="text-align: center">PriorityQueue</td>
          <td style="text-align: left">支持优先级的队列</td>
      </tr>
      <tr>
          <td style="text-align: center">set</td>
          <td style="text-align: center">TreeSet</td>
          <td style="text-align: left">集合，数据有序，红黑树</td>
      </tr>
      <tr>
          <td style="text-align: center">unordered_set</td>
          <td style="text-align: center">HashSet</td>
          <td style="text-align: left">集合，数据无序，hash</td>
      </tr>
      <tr>
          <td style="text-align: center">map</td>
          <td style="text-align: center">TreeMap</td>
          <td style="text-align: left">key-value 映射，key 有序，红黑树</td>
      </tr>
      <tr>
          <td style="text-align: center">unordered_map</td>
          <td style="text-align: center">HashMap</td>
          <td style="text-align: left">map, 无序，hash</td>
      </tr>
      <tr>
          <td style="text-align: center">multiset</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">集合，允许重复元素</td>
      </tr>
      <tr>
          <td style="text-align: center">multimap</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">map，允许重复的 key</td>
      </tr>
      <tr>
          <td style="text-align: center">unordered_multiset</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">无序允许重复元素集合</td>
      </tr>
      <tr>
          <td style="text-align: center">unordered_multimap</td>
          <td style="text-align: center"></td>
          <td style="text-align: left">无序允许重复 key 的 map</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">LinkedHashSet</td>
          <td style="text-align: left">按照插入顺序，支持 hash 查找</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">LinkedHashMap</td>
          <td style="text-align: left">按照插入顺序，支持 hash 查找</td>
      </tr>
      <tr>
          <td style="text-align: center"></td>
          <td style="text-align: center">HashTable</td>
          <td style="text-align: left">类似 HashMap，效率略低</td>
      </tr>
      <tr>
          <td style="text-align: center">bitset</td>
          <td style="text-align: center">BitSet</td>
          <td style="text-align: left">位操作</td>
      </tr>
  </tbody>
</table>
<h3 id="hashtable--hashmap">HashTable &amp; HashMap</h3>
<p>The HashMap class is roughly equivalent to Hashtable, except that it is asynchronized and permits nulls.</p>]]></description></item><item><title>Review java - Array</title><link>https://tyrangyang.github.io/TyrangYang_blog/java-review-array/</link><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-array/</guid><description><![CDATA[<h2 id="declaring-an-array">Declaring an array</h2>
<p>Both are allow</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">string</span><span class="w"> </span><span class="n">argc</span><span class="o">[]</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">string</span><span class="o">[]</span><span class="w"> </span><span class="n">argc</span><span class="p">;</span></span></span></code></pre></div></div>
<h3 id="int-array">Int array</h3>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span><span class="o">[]</span><span class="w"> </span><span class="n">nums</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="kt">int</span><span class="o">[</span><span class="n">7</span><span class="o">]</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">nums</span><span class="o">[</span><span class="n">0</span><span class="o">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">10</span><span class="p">;</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Rabbit</span><span class="o">[]</span><span class="w"> </span><span class="n">racers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Rabbit</span><span class="o">[</span><span class="n">10</span><span class="o">]</span><span class="p">;</span><span class="c1">//10 empty rabbit array;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">racers</span><span class="o">[</span><span class="n">0</span><span class="o">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Rabbit</span><span class="p">(</span><span class="s">&#34;B&#34;</span><span class="p">,</span><span class="s">&#34;F&#34;</span><span class="p">);</span></span></span></code></pre></div></div>
<h2 id="arraycopy">arraycopy()</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">System</span><span class="p">.</span><span class="na">arraycopy</span><span class="p">(</span><span class="n">nums</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">,</span><span class="w"> </span><span class="n">nums</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">,</span><span class="w"> </span><span class="n">nums</span><span class="p">.</span><span class="na">length</span><span class="p">);</span></span></span></code></pre></div></div>
<h2 id="array-vs-arraylist">Array vs ArrayList</h2>
<ol>
<li>An array needs to know its size at the time of creation, arrayList does not.</li>
<li>To assign an object in array you must assign it to a specific index.</li>
<li>Array use array syntax ([]).</li>
<li>ArrayList is parameterized. <code>ArrayList&lt;string&gt;</code></li>
</ol>
<h2 id="arraylist">ArrayList</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Flower</span><span class="o">&gt;</span><span class="w"> </span><span class="n">flowerList</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Flower</span><span class="o">&gt;</span><span class="p">();</span><span class="c1">// &lt;- ArrayList constructor</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Flower</span><span class="w"> </span><span class="n">f</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Flower</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Flower</span><span class="w"> </span><span class="n">m</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Flower</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">flowerList</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="n">f</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">flowerList</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="n">m</span><span class="p">);</span></span></span></code></pre></div></div>]]></description></item><item><title>Review java - javadoc</title><link>https://tyrangyang.github.io/TyrangYang_blog/java-review-javadoc/</link><pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-javadoc/</guid><description><![CDATA[<h2 id="javadocs">JavaDocs</h2>
<p>JavaDocs is able to easily generate a code &ldquo;maintenance manual&rdquo;</p>
<p>A doc comment is made up of two parts &ndash; a description and two or more tag.</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="cm">/**
</span></span></span><span class="line"><span class="cl"><span class="cm">* Here is description
</span></span></span><span class="line"><span class="cl"><span class="cm">*
</span></span></span><span class="line"><span class="cl"><span class="cm">* @tag Comment for tag
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span></span></span></code></pre></div></div>
<h3 id="tags">Tags</h3>
<ul>
<li>@author (classes and interfaces only, required)</li>
<li>@version (classes and interfaces only, required)</li>
<li>@param (methods and constructors only)</li>
<li>@return (methods only)</li>
<li>@exception</li>
<li>@see</li>
<li>@since</li>
<li>@serial (or @serialField or @serialData)</li>
<li>@deprecated</li>
</ul>
<h2 id="jdk-docs">JDK Docs</h2>
<p>External documentation can be created with javadoc</p>]]></description></item><item><title>Review java - OO</title><link>https://tyrangyang.github.io/TyrangYang_blog/java-review-oo/</link><pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-oo/</guid><description><![CDATA[<h2 id="class--object">Class &amp; Object</h2>
<p>A <strong>class</strong> only exists at <em>compile time</em>;</p>
<p>An <strong>object</strong> only exists at <em>runtime</em>.</p>
<h2 id="data-encapsulation">Data Encapsulation</h2>
<p>Data Encapsulation/information hiding: where the internal state and operation are hidden from others.</p>
<p>The more information Class A knows about Class B, the greater the possibility that changing Class A will adversely affect Class B. In an ideal world, making internal changes to Class A should have no, or very little, effect on other classes.</p>]]></description></item><item><title>Review java - Variable</title><link>https://tyrangyang.github.io/TyrangYang_blog/java-review-variable/</link><pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-variable/</guid><description><![CDATA[<h2 id="basic-types">Basic types</h2>
<p>Every type have a default value:</p>
<table>
  <thead>
      <tr>
          <th style="text-align: center">Type</th>
          <th style="text-align: center">Representation</th>
          <th style="text-align: center">Initial value</th>
          <th style="text-align: center">Storage</th>
          <th style="text-align: center">Max. value</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">byte</td>
          <td style="text-align: center">singed integer</td>
          <td style="text-align: center">0</td>
          <td style="text-align: center">8 bits</td>
          <td style="text-align: center">127</td>
      </tr>
      <tr>
          <td style="text-align: center">short</td>
          <td style="text-align: center">singed integer</td>
          <td style="text-align: center">0</td>
          <td style="text-align: center">16 bits</td>
          <td style="text-align: center">32767</td>
      </tr>
      <tr>
          <td style="text-align: center">int</td>
          <td style="text-align: center">singed integer</td>
          <td style="text-align: center">0</td>
          <td style="text-align: center">32 bits</td>
          <td style="text-align: center">2147483647</td>
      </tr>
      <tr>
          <td style="text-align: center">long</td>
          <td style="text-align: center">singed integer</td>
          <td style="text-align: center">0</td>
          <td style="text-align: center">64 bits</td>
          <td style="text-align: center">over 10^18</td>
      </tr>
      <tr>
          <td style="text-align: center">float</td>
          <td style="text-align: center">floating point</td>
          <td style="text-align: center">0.0</td>
          <td style="text-align: center">32 bits</td>
          <td style="text-align: center">over 10^38</td>
      </tr>
      <tr>
          <td style="text-align: center">double</td>
          <td style="text-align: center">floating point</td>
          <td style="text-align: center">0.0</td>
          <td style="text-align: center">64 bits</td>
          <td style="text-align: center">over 10^308</td>
      </tr>
      <tr>
          <td style="text-align: center">boolean</td>
          <td style="text-align: center">true or false</td>
          <td style="text-align: center">false</td>
          <td style="text-align: center">1 bit</td>
          <td style="text-align: center"></td>
      </tr>
      <tr>
          <td style="text-align: center">char</td>
          <td style="text-align: center">UNICODE (not ASCII)</td>
          <td style="text-align: center">u0000</td>
          <td style="text-align: center">16 bits</td>
          <td style="text-align: center">uFFFF</td>
      </tr>
  </tbody>
</table>
<h2 id="difference-between-i-and-i">Difference between i++ and ++i</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">1</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">b</span><span class="o">++</span><span class="p">;</span><span class="w"> </span><span class="o">//</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">1</span><span class="p">;</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">2</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">1</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">++</span><span class="n">b</span><span class="p">;</span><span class="w"> </span><span class="o">//</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">2</span><span class="p">;</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">2</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">1</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kt">int</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="o">++</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">a</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">//</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">3</span><span class="w"> </span><span class="p">;</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">2</span><span class="p">.</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">1</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kt">int</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">a</span><span class="o">++</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">//</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">2</span><span class="p">;</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">2</span><span class="p">.</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">1</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kt">int</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">++</span><span class="n">a</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">a</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">//</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">4</span><span class="p">;</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">2</span><span class="p">.</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">1</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kt">int</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="o">++</span><span class="n">a</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">//</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">3</span><span class="p">;</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">2</span><span class="p">.</span></span></span></code></pre></div></div>
<h2 id="for-loop">For loop</h2>
<p>for(<strong>int</strong> i=0; i &lt; n ; i++)</p>]]></description></item></channel></rss>