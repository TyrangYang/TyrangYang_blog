<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>java - Tag - TyrangYang_Blog</title>
        <link>https://tyrangyang.github.io/TyrangYang_blog/tags/java/</link>
        <description>java - Tag - TyrangYang_Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 08 Apr 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>RB tree</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/rb-tree/</link>
    <pubDate>Sat, 17 Aug 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/rb-tree/</guid>
    <description><![CDATA[2-3 tree &amp; 2-4 tree 2-node: 1 key and 2 children 3-node: 2 keys and 3 children 4-node: 3 keys and 4 children
A (2,4) tree (also called 2-4 tree or 2-3-4 tree) is a multi-way search with the following properties:
 Node-Size Property: every internal node has at most four children Depth Property: all the external nodes have the same depth  insertion deletion 2-4 tree ==&gt; RB tree If break down 3-node and 4-node, 2-4 tree will become RB tree.]]></description>
</item><item>
    <title>Common method comparison - c&#43;&#43; &amp; java</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-common-method/</link>
    <pubDate>Fri, 12 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-common-method/</guid>
    <description><![CDATA[Sort C++ For c++, here is official document
sort() This method sorts elements in the range [first, last).
Result is in ascending order by deflaut.
Introsort.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  // sort algorithm example #include &lt;iostream&gt; // std::cout#include &lt;algorithm&gt; // std::sort#include &lt;vector&gt; // std::vector bool myfunction (int i,int j) { return (i&gt;j); } int main () { int myints[] = {32,71,12,45,26,80,53,33}; std::vector&lt;int&gt; myvector (myints, myints+8); // 32 71 12 45 26 80 53 33  // using default comparison (operator &lt;):  std::sort (myvector.]]></description>
</item><item>
    <title>Container comparison - c&#43;&#43; &amp; java</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-containor/</link>
    <pubDate>Thu, 11 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/language-comparison-containor/</guid>
    <description><![CDATA[Container comparison C++ version is c++11. Java version is java se8.
   C++ JAVA Description     array / [ ] [ ] 固定大小的数组   vector ArrayList 可变长度的数组    Vector 可变长度的数组，支持同步操作，效率比 ArrayList 略差   list LinkedList 双链表，便于增删   forward_list  单链表，c++没有给他提供 size()的方法   deque ArrayDeque 双向队列   stack Stack 栈，先进后出   queue Queue 队，先进先出   priority_queue PriorityQueue 支持优先级的队列   set TreeSet 集合，数据有序，红黑树   unordered_set HashSet 集合，数据无序，hash   map TreeMap key-value 映射，key 有序，红黑树   unordered_map HashMap map, 无序，hash   multiset  集合，允许重复元素   multimap  map，允许重复的 key   unordered_multiset  无序允许重复元素集合   unordered_multimap  无序允许重复 key 的 map    LinkedHashSet 按照插入顺序，支持 hash 查找    LinkedHashMap 按照插入顺序，支持 hash 查找    HashTable 类似 HashMap，效率略低   bitset BitSet 位操作    HashTable &amp; HashMap The HashMap class is roughly equivalent to Hashtable, except that it is asynchronized and permits nulls.]]></description>
</item><item>
    <title>Review java - Array</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/java-review-array/</link>
    <pubDate>Wed, 10 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-array/</guid>
    <description><![CDATA[Declaring an array Both are allow
1 2  string argc[]; string[] argc;   Int array 1 2  int[] nums = new int[7]; nums[0] = 10;   1 2  Rabbit[] racers = new Rabbit[10];//10 empty rabbit array; racers[0] = new Rabbit(&#34;B&#34;,&#34;F&#34;);   arraycopy() 1  System.arraycopy(nums, 0, nums, 0, nums.length);   Array vs ArrayList  An array needs to know its size at the time of creation, arrayList does not.]]></description>
</item><item>
    <title>Review java - javadoc</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/java-review-javadoc/</link>
    <pubDate>Tue, 09 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-javadoc/</guid>
    <description><![CDATA[JavaDocs JavaDocs is able to easily generate a code &ldquo;maintenance manual&rdquo;
A doc comment is made up of two parts &ndash; a description and two or more tag.
1 2 3 4 5  /** * Here is description * * @tag Comment for tag */   Tags  @author (classes and interfaces only, required) @version (classes and interfaces only, required) @param (methods and constructors only) @return (methods only) @exception @see @since @serial (or @serialField or @serialData) @deprecated  JDK Docs External documentation can be created with javadoc]]></description>
</item><item>
    <title>Review java - OO</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/java-review-oo/</link>
    <pubDate>Fri, 05 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-oo/</guid>
    <description><![CDATA[Class &amp; Object A class only exists at compile time;
An object only exists at runtime.
Data Encapsulation Data Encapsulation/information hiding: where the internal state and operation are hidden from others.
The more information Class A knows about Class B, the greater the possibility that changing Class A will adversely affect Class B. In an ideal world, making internal changes to Class A should have no, or very little, effect on other classes.]]></description>
</item><item>
    <title>Review java - Variable</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/java-review-variable/</link>
    <pubDate>Mon, 01 Jul 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tyrangyang.github.io/TyrangYang_blog/java-review-variable/</guid>
    <description><![CDATA[Basic types Every type have a default value:
   Type Representation Initial value Storage Max. value     byte singed integer 0 8 bits 127   short singed integer 0 16 bits 32767   int singed integer 0 32 bits 2147483647   long singed integer 0 64 bits over 10^18   float floating point 0.0 32 bits over 10^38   double floating point 0.]]></description>
</item></channel>
</rss>
