<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Ssw - Tag - TyrangYang_Blog</title><link>https://tyrangyang.github.io/TyrangYang_blog/tags/ssw/</link><description>Ssw - Tag - TyrangYang_Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 03 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://tyrangyang.github.io/TyrangYang_blog/tags/ssw/" rel="self" type="application/rss+xml"/><item><title>Software Development Course note</title><link>https://tyrangyang.github.io/TyrangYang_blog/software-development-1/</link><pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate><author>Haolin Yang</author><guid>https://tyrangyang.github.io/TyrangYang_blog/software-development-1/</guid><description><![CDATA[<h2 id="agile-vs-traditional-sdlc-models">Agile Vs Traditional SDLC Models</h2>
<p>Agile is based on the <strong>adaptive software development methods</strong>, whereas the traditional SDLC models like the <strong>waterfall model is based on a predictive approach</strong>. Predictive teams in the traditional SDLC models usually work with detailed planning and have a complete forecast of the exact tasks and features to be delivered in the next few months or during the product life cycle.</p>
<p>Predictive methods entirely depend on the requirement analysis and planning done in the beginning of cycle. Any changes to be incorporated go through a strict change control management and prioritization.</p>]]></description></item></channel></rss>