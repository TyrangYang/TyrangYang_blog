<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>erlang on TyrangYang_Blog</title>
    <link>https://tyrangyang.github.io/TyrangYang_blog/tags/erlang/</link>
    <description>Recent content in erlang on TyrangYang_Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 14 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tyrangyang.github.io/TyrangYang_blog/tags/erlang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Erlang overview</title>
      <link>https://tyrangyang.github.io/TyrangYang_blog/erlang/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tyrangyang.github.io/TyrangYang_blog/erlang/</guid>
      <description>Basic Documentation: https://erlang.org/doc/search/ Functional language Erlang is a functional language. Code need compile and running line by line.
Every line need finish by a .. like: A = 1..
Module Every erlang file will consider as a module. You console will compile all module you want.
You have to add -module(&amp;lt;filename&amp;gt;). into first line. Module should be same with filename without suffix.
In erl console, run c(&amp;lt;filename&amp;gt;). to compile it. Run a function is like: &amp;lt;moduleName&amp;gt;: &amp;lt;functionName&amp;gt;(.</description>
    </item>
    
  </channel>
</rss>